{"ast":null,"code":"var _jsxFileName = \"/Users/i500577/Desktop/work/CoreUI-team/week-5/moz-todo-react/src/components/UL.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UL(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks); // function Todo(name,id,completed) {\n  //     return (\n  //       <li className=\"todo stack-small\">\n  //         <div className=\"c-cb\">\n  //           <input id=\"todo-0\" type=\"checkbox\" defaultChecked={completed} />\n  //           <label className=\"todo-label\" htmlFor={id}>\n  //           {name}\n  //           </label>\n  //         </div>\n  //         <div className=\"btn-group\">\n  //           <button type=\"button\" className=\"btn\">\n  //             Edit <span className=\"visually-hidden\">{name}</span>\n  //           </button>\n  //           <button type=\"button\" className=\"btn btn__danger\">\n  //             Delete <span className=\"visually-hidden\">{name}</span>\n  //           </button>\n  //         </div>\n  //       </li>\n  //     );\n  //   }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    children: taskList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UL, \"pjFsLTHS1Kjd+NDyC2kZTexpLic=\");\n\n_c = UL;\n\nvar _c;\n\n$RefreshReg$(_c, \"UL\");","map":{"version":3,"sources":["/Users/i500577/Desktop/work/CoreUI-team/week-5/moz-todo-react/src/components/UL.js"],"names":["React","useState","Todo","UL","props","tasks","setTasks","taskList","map","task","id","name","completed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,KAAK,CAACC,KAAP,CAAlC,CAD8B,CAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAME,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBAC3B,QAAC,IAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAACC,EADX;AAEE,IAAA,IAAI,EAAED,IAAI,CAACE,IAFb;AAGE,IAAA,SAAS,EAAEF,IAAI,CAACG;AAHlB,KAIOH,IAAI,CAACC,EAJZ;AAAA;AAAA;AAAA;AAAA,UADa,CAAjB;AASA,sBACI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,SAAS,EAAC,uCAFV;AAGA,uBAAgB,cAHhB;AAAA,cAKCH;AALD;AAAA;AAAA;AAAA;AAAA,UADJ;AASD;;GAxCqBJ,E;;KAAAA,E","sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\n\nexport default function UL(props) {\n    const [tasks, setTasks] = useState(props.tasks);\n    // function Todo(name,id,completed) {\n    //     return (\n    //       <li className=\"todo stack-small\">\n    //         <div className=\"c-cb\">\n    //           <input id=\"todo-0\" type=\"checkbox\" defaultChecked={completed} />\n    //           <label className=\"todo-label\" htmlFor={id}>\n    //           {name}\n    //           </label>\n    //         </div>\n    //         <div className=\"btn-group\">\n    //           <button type=\"button\" className=\"btn\">\n    //             Edit <span className=\"visually-hidden\">{name}</span>\n    //           </button>\n    //           <button type=\"button\" className=\"btn btn__danger\">\n    //             Delete <span className=\"visually-hidden\">{name}</span>\n    //           </button>\n    //         </div>\n    //       </li>\n    //     );\n    //   }\n    const taskList = tasks.map(task => (\n        <Todo\n          id={task.id}\n          name={task.name}\n          completed={task.completed}\n          key={task.id}\n        />\n      )\n    );\n    return (\n        <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    );\n  }"]},"metadata":{},"sourceType":"module"}