{"ast":null,"code":"var _jsxFileName = \"/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import AddTask from \"./AddTask\";\n//Create a new task and submit the form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const {\n    tasks\n  } = props;\n  const [name, setName] = useState('');\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  } // handleChange updates name state\n\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name); // send the task back to the App component\n\n    setName(\"\"); //clear the input after submitting forms \n  }\n\n  return (\n    /*#__PURE__*/\n    // when a form is submitted\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"label-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-todo-input\",\n          className: \"label__lg\",\n          children: \"What needs to be done?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"new-todo-input\",\n        className: \"input input__lg\",\n        name: \"text\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary btn__lg\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(Form, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/Form.js"],"names":["React","useState","Form","props","tasks","name","setName","addTask","newTask","id","nanoid","completed","setTasks","handleChange","e","target","value","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AAEA;;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM;AAACC,IAAAA;AAAD,MAAQD,KAAd;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AACA,WAASM,OAAT,CAAiBF,IAAjB,EAAuB;AACrB,UAAMG,OAAO,GAAG;AAAEC,MAAAA,EAAE,EAAE,UAAUC,MAAM,EAAtB;AAA0BL,MAAAA,IAAI,EAAEA,IAAhC;AAAsCM,MAAAA,SAAS,EAAE;AAAjD,KAAhB;AACAC,IAAAA,QAAQ,CAAC,CAAC,GAAGR,KAAJ,EAAWI,OAAX,CAAD,CAAR;AACD,GANgB,CAOjB;;;AACA,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AACrBR,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AACD,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACI,cAAF;AACAf,IAAAA,KAAK,CAACI,OAAN,CAAcF,IAAd,EAFqB,CAEA;;AACrBC,IAAAA,OAAO,CAAC,EAAD,CAAP,CAHqB,CAGR;AAChB;;AACD;AAAA;AACE;AACA;AAAM,MAAA,QAAQ,EAAEW,YAAhB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,+BACE;AAAO,UAAA,OAAO,EAAC,gBAAf;AAAgC,UAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,gBAFL;AAGE,QAAA,SAAS,EAAC,iBAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,cANF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAoBD;;GApCMf,I;;KAAAA,I;AAsCP,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n// import AddTask from \"./AddTask\";\n\n//Create a new task and submit the form\nfunction Form(props) {\n    const {tasks}=props;\n    const [name, setName] = useState('');\n    function addTask(name) {\n      const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n      setTasks([...tasks, newTask]);\n    }\n    // handleChange updates name state\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.addTask(name); // send the task back to the App component\n        setName(\"\"); //clear the input after submitting forms \n    }\n    return (\n      // when a form is submitted\n      <form onSubmit={handleSubmit}> \n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\"> \n            What needs to be done?\n          </label>\n        </h2>\n        <input\n          type=\"text\"\n          id=\"new-todo-input\"\n          className=\"input input__lg\"\n          name=\"text\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n          Add\n        </button>\n      </form >\n    );\n  }\n  \n  export default Form;"]},"metadata":{},"sourceType":"module"}