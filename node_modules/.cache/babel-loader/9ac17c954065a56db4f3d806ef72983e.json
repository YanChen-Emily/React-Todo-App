{"ast":null,"code":"var _jsxFileName = \"/Users/i500577/Desktop/work/CoreUI-team/week-5/moz-todo-react/src/components/Main.js\";\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport FilterButton from \"./FilterButton\";\nimport routes from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nexport const FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\nexport const [tasks, setTasks] = useState(props.tasks);\nexport const [filter, setFilter] = useState('All');\nexport const taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n  id: task.id,\n  name: task.name,\n  completed: task.completed,\n  toggleTaskCompleted: toggleTaskCompleted,\n  deleteTask: deleteTask,\n  editTask: editTask\n}, task.id, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 1\n}, this));\nexport const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n  name: name,\n  isPressed: name === filter,\n  setFilter: setFilter\n}, name, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 5\n}, this));\nexport function addTask(name) {\n  const newTask = {\n    id: \"todo-\" + nanoid(),\n    name: name,\n    completed: false\n  };\n  setTasks([...tasks, newTask]);\n}\nexport function toggleTaskCompleted(id) {\n  const updatedTasks = tasks.map(task => {\n    // if this task has the same ID as the edited task\n    if (id === task.id) {\n      // use object spread to make a new object\n      // whose `completed` prop has been inverted\n      return { ...task,\n        completed: !task.completed\n      };\n    }\n\n    return task;\n  });\n  setTasks(updatedTasks);\n}\nexport function deleteTask(id) {\n  const remainingTasks = tasks.filter(task => id !== task.id);\n  setTasks(remainingTasks);\n}\nexport function editTask(id, newName) {\n  const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n    if (id === task.id) {\n      //\n      return { ...task,\n        name: newName\n      };\n    }\n\n    return task;\n  });\n  setTasks(editedTaskList);\n}\nexport function ListFiltered(filterList) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters btn-group stack-exception\",\n    children: filterList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_c2 = ListFiltered;\nexport function ListOfTasks(taskList) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), routes]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ListOfTasks;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"ListFiltered\");\n$RefreshReg$(_c3, \"ListOfTasks\");","map":{"version":3,"sources":["/Users/i500577/Desktop/work/CoreUI-team/week-5/moz-todo-react/src/components/Main.js"],"names":["React","useState","Todo","FilterButton","routes","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","tasks","setTasks","props","filter","setFilter","taskList","map","id","name","toggleTaskCompleted","deleteTask","editTask","filterList","addTask","newTask","nanoid","updatedTasks","remainingTasks","newName","editedTaskList","ListFiltered","ListOfTasks"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport FilterButton from \"./FilterButton\";\nimport routes from \"./routes\";\n\nexport const FILTER_MAP = {\n    All: () => true,\n    Active: task => !task.completed,\n    Completed: task => task.completed\n  };\n\nexport const FILTER_NAMES = Object.keys(FILTER_MAP);\nexport const [tasks, setTasks] = useState(props.tasks);\nexport const [filter, setFilter] = useState('All');\n\nexport const taskList = tasks\n.filter(FILTER_MAP[filter])\n.map(task => (\n<Todo\n  id={task.id}\n  name={task.name}\n  completed={task.completed}\n  key={task.id}\n  toggleTaskCompleted={toggleTaskCompleted}\n  deleteTask={deleteTask}\n  editTask={editTask}\n/>\n));\n\nexport const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\nexport function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\nexport function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\nexport function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\nexport function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n}\n\nexport function ListFiltered(filterList){\n    return(\n        <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n    );\n}\n\nexport function ListOfTasks(taskList){\n  return(\n    <div className=\"main\">\n      <ul\n      role=\"list\"\n      className=\"todo-list stack-large stack-exception\"\n      aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n        {routes}\n      </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}