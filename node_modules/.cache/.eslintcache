[{"/Users/i500577/Desktop/work/CoreUI-team/week-5/moz-todo-react/src/App.js":"1","/Users/i500577/Desktop/work/CoreUI-team/week-5/moz-todo-react/src/components/Main.js":"2","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/index.js":"3","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/App.js":"4","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/reportWebVitals.js":"5","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/pages/Detail.js":"6","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/Todo.js":"7","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/Main.js":"8","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/FilterButton.js":"9","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/Form.js":"10","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/pages/Home.js":"11","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/FilterList.js":"12","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/TaskList.js":"13","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/HeadingText.js":"14"},{"size":1887,"mtime":1648771270975,"results":"15","hashOfConfig":"16"},{"size":1477,"mtime":1648769009317,"results":"17","hashOfConfig":"16"},{"size":763,"mtime":1649353534010,"results":"18","hashOfConfig":"19"},{"size":1238,"mtime":1649353501725,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1647378899275,"results":"21","hashOfConfig":"19"},{"size":199,"mtime":1649353522819,"results":"22","hashOfConfig":"19"},{"size":2655,"mtime":1649203876768,"results":"23","hashOfConfig":"19"},{"size":1362,"mtime":1648832342820,"results":"24","hashOfConfig":"19"},{"size":443,"mtime":1648142608915,"results":"25","hashOfConfig":"19"},{"size":1341,"mtime":1649188408908,"results":"26","hashOfConfig":"19"},{"size":74,"mtime":1648831632925,"results":"27","hashOfConfig":"19"},{"size":843,"mtime":1649190540356,"results":"28","hashOfConfig":"19"},{"size":1291,"mtime":1649353562101,"results":"29","hashOfConfig":"19"},{"size":207,"mtime":1649353595501,"results":"30","hashOfConfig":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"64z8f7",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1mloqo2",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"/Users/i500577/Desktop/work/CoreUI-team/week-5/moz-todo-react/src/App.js",["85","86","87","88","89","90","91"],[],"import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { FILTER_MAP, FILTER_NAMES, addTask, toggleTaskCompleted, deleteTask, editTask } from \"./components/Main\";\nimport { Detail } from './components/pages/Detail';\nimport { Home } from './components/pages/Home';\nimport { nanoid } from \"nanoid\";\nimport { routes } from \"./components/routes\";\nimport { Routes, Route, Navigate, BrowserRouter, useNavigate } from \"react-router-dom\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const taskList = tasks.filter(FILTER_MAP[filter])\n  .map(task => (\n  <Todo\n   id={task.id}\n   name={task.name}\n   completed={task.completed}\n   key={task.id}\n   toggleTaskCompleted={toggleTaskCompleted}\n   deleteTask={deleteTask}\n   editTask={editTask}\n  />\n  ));\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n    ));\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  \n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo List</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n      {filterList}\n      </div>\n      <h2 id=\"list-heading\">\n        {headingText} \n      </h2>\n      <div className=\"main\">\n      <ul\n      role=\"list\"\n      className=\"todo-list stack-large stack-exception\"\n      aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n      <Routes>\n          <Route path=\"/\" element={<Home />}/>\n          <Route path=\"/detail\" element={<Detail />}/>\n      </Routes>\n     </div>\n    </div>\n  );\n}\nexport default App;\n\n","/Users/i500577/Desktop/work/CoreUI-team/week-5/moz-todo-react/src/components/Main.js",["92"],[],"import React, { useState } from \"react\";\n// import Todo from \"./Todo\";\n// import FilterButton from \"./FilterButton\";\n// import { routes }  from \"./routes\";\nimport { nanoid } from \"nanoid\";\n\nexport const FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nexport const FILTER_NAMES = Object.keys(FILTER_MAP);\n\nexport function addTask(tasks, setTasks, name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\nexport function toggleTaskCompleted(tasks, setTasks, id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  \nexport function deleteTask(tasks, setTasks,id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  \nexport function editTask(tasks, setTasks, id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n} \n\nexport const Home = () => {\n  return <div>You are in Home page</div>\n}\n\n",["93","94"],"/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/index.js",[],[],["95","96"],"/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/App.js",["97"],[],"import React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterList from \"./components/FilterList\";\nimport { TaskList}  from \"./components/TaskList\";\nimport { nanoid } from \"nanoid\";\nimport HeadingText from \"./components/HeadingText\";\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  \n  function addTask(name) {\n      const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n      setTasks([...tasks, newTask]);\n    }\n  \n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo List</h1>\n      <Form \n      setTasks = {setTasks}\n      addTask={addTask} /> \n      <div className=\"filters btn-group stack-exception\">\n      <FilterList tasks={tasks} setFilter={setFilter}  filter={filter}/>\n      </div>\n      <h2 id=\"list-heading\">\n         <HeadingText tasks={tasks} setTasks={setTasks} filter={filter}/>\n      </h2>\n      <div className=\"main\">\n      <ul\n      role=\"list\"\n      className=\"todo-list stack-large stack-exception\"\n      aria-labelledby=\"list-heading\"\n      >\n        <TaskList tasks={tasks} setTasks={setTasks} filter={filter}/>\n      </ul>\n     </div>\n    </div>\n  );\n}\nexport default App;\n\n","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/reportWebVitals.js",[],[],"/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/pages/Detail.js",["98"],[],"import React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom'\n\nexport default function Detail(){\n  const { task } = useParams();\n  return (\n    <p>I am {task} page</p>\n  ) \n}\n","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/Todo.js",[],[],"/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/Main.js",["99"],[],"import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nexport const FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nexport const FILTER_NAMES = Object.keys(FILTER_MAP);\n\nexport function addTask(tasks, setTasks, name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\nexport function toggleTaskCompleted(tasks, setTasks, id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  \nexport function deleteTask(tasks, setTasks,id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  \nexport function editTask(tasks, setTasks, id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n} \n\nexport const Home = () => {\n  return <div>You are in Home page</div>\n}\n\n",["100","101"],"/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/FilterButton.js",[],[],"/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/Form.js",["102"],[],"import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\n//Create a new task and submit the form\nfunction Form(props) {\n    const {tasks, setTasks}=props;\n    const [name, setName] = useState('');\n    function addTask(name) {\n      const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n      setTasks([...tasks, newTask]);\n    }\n    // handleChange updates name state\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n    function handleSubmit(e) {\n        e.preventDefault();\n        // props.addTask(name); // send the task back to the App component\n        props.addTask(name);\n        setName(\"\"); //clear the input after submitting forms \n    }\n    return (\n      // when a form is submitted\n      <form onSubmit={handleSubmit}> \n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\"> \n            What needs to be done?\n          </label>\n        </h2>\n        <input\n          type=\"text\"\n          id=\"new-todo-input\"\n          className=\"input input__lg\"\n          name=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n          Add\n        </button>\n      </form >\n    );\n  }\n  \n  export default Form;","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/pages/Home.js",[],[],"/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/FilterList.js",["103","104"],[],"import React, { useState } from \"react\";\nimport FilterButton from \"./FilterButton\";\n\nexport default function FilterList(props){\n    // const [tasks, setTasks] = useState(props.tasks);\n    // const [filter, setFilter] = useState('All');\n    const {tasks, setFilter, filter} = props;\n    const FILTER_MAP = {\n    All: () => true,\n    Active: task => !task.completed,\n    Completed: task => task.completed\n  };\n//   console.log(FILTER_MAP);\n//   console.log(filter);\n//   console.log(tasks);\n  const FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction clickHandler(filter){\n    setFilter(filter);\n    // console.log(filter);\n} \n  return (\n    FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n    //   setFilter={setFilter}\n      setFilter={()=>clickHandler(name)}\n    />\n    )))\n}\n\n\n","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/TaskList.js",["105","106"],[],"import React, { useState } from \"react\";\nimport Todo from \"./Todo\";\n\nexport const TaskList=(props)=>{\n    const {tasks, setTasks,filter} = props;\n    const FILTER_MAP = {\n        All: () => true,\n        Active: task => !task.completed,\n        Completed: task => task.completed\n      };\n    const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n    function toggleTaskCompleted(id) {\n        const updatedTasks = tasks.map(task => {\n          if (id === task.id) {\n            return {...task, completed: !task.completed}\n          }\n          return task;\n        });\n        setTasks(updatedTasks);\n      }\n  \n      function deleteTask(id) {\n        const remainingTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainingTasks);\n      }\n  \n      function editTask(id, newName) {\n        const editedTaskList = tasks.map(task => {\n          if (id === task.id) {\n            return {...task, name: newName}\n          }\n          return task;\n        });\n        setTasks(editedTaskList);\n    } \n  \n    return(tasks.filter(FILTER_MAP[filter])\n    .map(task => (\n    <Todo\n     id={task.id}\n     name={task.name}\n     completed={task.completed}\n     key={task.id}\n     toggleTaskCompleted={toggleTaskCompleted}\n     deleteTask={deleteTask}\n     editTask={editTask}\n    />\n    )))\n}\n","/Users/i500577/Desktop/work/CoreUI-team/week-5/Todo-App-react/src/components/HeadingText.js",["107","108"],[],"export default function HeadingText(props){\n    const {tasks, setTasks, filter} = props;\n    const tasksNoun = tasks.length !== 1 ? 'tasks' : 'task';\n    return (`${tasks.length} ${tasksNoun} remaining`)\n}\n\n",{"ruleId":"109","severity":1,"message":"110","line":8,"column":10,"nodeType":"111","messageId":"112","endLine":8,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":9,"column":10,"nodeType":"111","messageId":"112","endLine":9,"endColumn":16},{"ruleId":"109","severity":1,"message":"114","line":10,"column":25,"nodeType":"111","messageId":"112","endLine":10,"endColumn":33},{"ruleId":"109","severity":1,"message":"115","line":10,"column":35,"nodeType":"111","messageId":"112","endLine":10,"endColumn":48},{"ruleId":"109","severity":1,"message":"116","line":10,"column":50,"nodeType":"111","messageId":"112","endLine":10,"endColumn":61},{"ruleId":"109","severity":1,"message":"117","line":13,"column":17,"nodeType":"111","messageId":"112","endLine":13,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":49,"column":7,"nodeType":"120","endLine":53,"endColumn":8},{"ruleId":"109","severity":1,"message":"121","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"118","severity":1,"message":"119","line":30,"column":7,"nodeType":"120","endLine":34,"endColumn":8},{"ruleId":"109","severity":1,"message":"121","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"121","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"122","replacedBy":"128"},{"ruleId":"124","replacedBy":"129"},{"ruleId":"109","severity":1,"message":"130","line":8,"column":14,"nodeType":"111","messageId":"112","endLine":8,"endColumn":21},{"ruleId":"109","severity":1,"message":"121","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"131","line":7,"column":12,"nodeType":"111","messageId":"112","endLine":7,"endColumn":17},{"ruleId":"109","severity":1,"message":"121","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"132","line":11,"column":11,"nodeType":"111","messageId":"112","endLine":11,"endColumn":23},{"ruleId":"109","severity":1,"message":"117","line":2,"column":19,"nodeType":"111","messageId":"112","endLine":2,"endColumn":27},{"ruleId":"109","severity":1,"message":"133","line":2,"column":29,"nodeType":"111","messageId":"112","endLine":2,"endColumn":35},"no-unused-vars","'nanoid' is defined but never used.","Identifier","unusedVar","'routes' is defined but never used.","'Navigate' is defined but never used.","'BrowserRouter' is defined but never used.","'useNavigate' is defined but never used.","'setTasks' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'useState' is defined but never used.","no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],["134"],["135"],"'addTask' is defined but never used.","'tasks' is assigned a value but never used.","'FILTER_NAMES' is assigned a value but never used.","'filter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]